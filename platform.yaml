AWSTemplateFormatVersion: '2010-09-09'
Description: VPC Network Stack
Metadata: {}
Mappings: {}
Conditions: {}
Outputs: {}
Parameters:
  CidrBlock:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.1.0.0/16
    Description: VPC CIDR Block (eg 10.0.0.0/16)
    Type: String
  AvailabilityZone1:
    Description: The AvailabilityZone to use for the first subnet
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-west-1a
  AvailabilityZone2:
    Description: The AvailabilityZone to use for the second subnet
    Type: AWS::EC2::AvailabilityZone::Name
    Default: eu-west-1b
  WebSubnetCIDR:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.1.1.0/24
    Description: VPC CIDR Block for the Web Subnet (eg 10.0.0.0/24)
    Type: String
  DBSubnetCIDR1:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.1.2.0/24
    Description: VPC CIDR Block for the DB Subnet (eg 10.0.0.0/24)
    Type: String
  DBSubnetCIDR2:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Default: 10.1.3.0/24
    Description: VPC CIDR Block for the DB Subnet (eg 10.0.0.0/24)
    Type: String
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: CidrBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value:
            Ref: AWS::StackName
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: InternetGateway
      VpcId:
        Ref: VPC
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: {Ref: 'AWS::StackName'}
      VpcId:
        Ref: VPC
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: RouteTable
  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: {Ref: AvailabilityZone1}
      CidrBlock: {Ref: WebSubnetCIDR}
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - [{Ref: 'AWS::StackName'}, {Ref: AvailabilityZone1}]
      VpcId: {Ref: VPC}
  Subnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: {Ref: AvailabilityZone1}
      CidrBlock: {Ref: DBSubnetCIDR1}
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - [{Ref: 'AWS::StackName'}, {Ref: AvailabilityZone1}]
      VpcId: {Ref: VPC}
  Subnet3:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: {Ref: AvailabilityZone2}
      CidrBlock: {Ref: DBSubnetCIDR2}
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value:
            Fn::Join:
              - '-'
              - [{Ref: 'AWS::StackName'}, {Ref: AvailabilityZone2}]
      VpcId: {Ref: VPC}
  SubnetAssoc1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: Subnet1
  SubnetAssoc2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: Subnet2
  SubnetAssoc3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: RouteTable
      SubnetId:
        Ref: Subnet3
  WebSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
        VpcId: {Ref: VPC}
        GroupDescription: Access to webserver
        SecurityGroupIngress:
            CidrIp: 0.0.0.0/0
            IpProtocol: -1
            ToPort: 80
        Tags:
            - Key: Name
              Value: WebSG
  DBSG:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: {Ref: VPC}
      GroupDescription: Access to Database
      SecurityGroupIngress:
          SourceSecurityGroupId : {Ref: WebSG}
          IpProtocol: -1
          ToPort: 3306
      SecurityGroupIngress:
          CidrIp : 188.65.56.229/32
          IpProtocol: -1
          ToPort: 3306
      Tags:
          - Key: Name
            Value: DBSG
